body{
    max-width: 600px;
    margin: 60px auto 0; 
    font-family: sans-serif;
    line-height: 1.5;

    /* Line-height
    Valor: 
    1 = 100% (padrão)
    1.5 = 150%

    /* Fonte 
    Serif = destaque, lugares impressos (testos grandes)
    
    /* Deixar margin sempre definido - pois o padrão é ter uma pequena margem
    
    /* Margin
    1 = em cima; 
    2 = em cima, lados; 
    3 = em cima, lados, em baixo; 
    4 = em cima, direita, em baixo, esquerda (sentido horário)*/
}

h2{
    border-top: solid 5px lightsteelblue;
    margin-top: 50px;
    padding-top: 50px;
    text-transform: uppercase;
    letter-spacing: 1px;

    /* Letter-spacing: Espaço entre as letras

    /*
        Não utilizar br/hr (tags que criam linha) no HTML
    */
}

h2 span {
    font-family: Georgia, serif;
    font-style: italic;
    font-size: 18px;
    color: lightsteelblue;
    display: inline-block;
    margin-left: 280px;
    /* display: span não tem margin pois é inline
    /* font-family:
        É utilizado vários nomes de fonte, pois se o pc não encontrar o primeiro usará o próximo (nesse caso, qualquer font com serifa)
    /*
    Encapsulamento seletor: Todos os spans que estão dentro h2
    */
}

p{
    color: steelblue
}

#first{
    font-size: 18px;
    font-weight: bold;
}

.green{
    color: yellowgreen;
}

[nome=menor]{
    border: dotted 1px plum;
    text-align: justify

    /*
    Seletor CSS por atributo/propriedade
    Não é muito utilizado
    */
}

footer{
    margin-bottom: 100px;
}

ol{
    margin: 0;
    margin-bottom: 60px;
    padding: 0;

    /*
        Não tira o paddin/margin dos ITENS da lista
    */
}

li{
    background-color: lavender;
    border-radius: 4px;
    margin-bottom: 10px;
}
li a{
    text-decoration: none;
    /*
        text-decoration: 
        None: tira o sublinhado do texto
    /*
        Âncoras dentro de textos de lista
    */
}
li a:visited{
    color: green;
}
li a:hover{
    color: dodgerblue;
    font-size: 18px;
}

.final{
    width: 50px;
    height: 50px;
    border-radius: 3px;
    border: none;
    color: white;
    margin: auto 15px; 

    /*
   margin auto: nesse caso, serve para cima e baixo
    color: troca a cor do conteúdo (letra)
    */
}

.final:nth-child(1){
    background-color: dodgerblue;
    /*
    escolhe um filho específico de final
    */
}
.final:nth-child(5){
    background-color: darkviolet;
}

/*
    Posicionamento
*/
img{
    border: lightgray 3px solid;
    position: absolute;

    /*
    position: sticky;
    top: 70px;
    /*position: fixed;
    bottom: 35px;
    right: 35px;
    z-index: -1;
    /*
     Position
     - Relative: pode ser reposicionado em relação à posição original do elemento
     - Static: padrão, em relação à organização original da página
     - Fixed: posição em relação ao view port >> utilizados em headers fixos, botões para ir ao topo (fica parada na tela)
     - Sticky: relative > fixed, se move em relação ao elementos que contem.
     Não é utilizado nas laterais
     Delimita até onde um elemento pode se mover no viewport
     - Absolute: se posiciona em relação ao pai que não está configurado como static (fica parado em relação ao elemento pai


     - left: 20px : 20px à esquerda do lugar que originalmente deveria estar

     Toda vez que reposiciona um elemento, é criado uma nova camada de posicionamento. 
     
     Não quebra a estrutura da página no relative, no fixed é retirado


     Não utlizar display-float

     z-index: profundidade, padrão = 1. Dois elementos sobrepostos,
    */
}

article{
    position: relative;
}